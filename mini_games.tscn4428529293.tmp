[gd_scene load_steps=3 format=3 uid="uid://ts6vwlffw6uj"]

[sub_resource type="GDScript" id="GDScript_rnpmt"]
script/source = "extends Node2D

var b
var a 
var operacao = [\"+\",\"-\",\"x\", \":\"]
var pergunta = Label.new()
var resultado

var pontos : float
#para as perguntas-> função que gera os numeros e coloca no label
#para as respostas -> 3 ou 4 botões com numeros aleatorios proximos ao da resposta
#se a resposta estiver certa-> add pontos ao multiplicador e passa pra proxima pergunta
#se estiver errada -> fecha a janela e encerra, retornando o valor do multiplicador 

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass


func _on_button_pressed() -> void:
	$Label.queue_free()
	$start.queue_free()
	comecar_jogo()
	
func comecar_jogo():
		#escolhendo valores e operacao usada
		b = randi_range(1,20)
		a =randi_range(1,30)
		var op = operacao[randi_range(0,3)]
		#conta(faz a conta com a operacao e os numeros aleatorios)
		conta(op)
		#cria a pergunta
		perguntar(op)
		#gerar_botoes_resposta_cria os botoes para responder
		var botoes = gerar_botoes_resposta(conta(op))
		exibir_botoes(botoes)
	
	 # Replace with function body.
func perguntar(operacao):
	pergunta.position= Vector2(150, -100)
	pergunta.text = \"quanto é: %d %s %d?\" % [a,operacao ,b]
	add_child(pergunta)
	
func conta(operacao):
	match operacao:
			\"+\":
				resultado = a+b
			\"-\":
				resultado = a-b
			\"x\":
				resultado = a*b
			\"/\":
				resultado = a/b	
	return resultado
		 			
func gerar_botoes_resposta(resultado):
	var y = 100
	var posicao = randi_range(0,3)
	var botoes = []
	var resposta_correta = Button.new()
	for i in(range(4)) :
		var off_set = randi_range(-5,+5)
		if posicao ==i:
			resposta_correta.text = var_to_str(resultado)
			resposta_correta.position = Vector2(150, y)
			y+=50
			botoes.append(resposta_correta)
		else: 
			var resposta_errada = Button.new()
			var aux = off_set+resultado
			resposta_errada.text = str(aux)
			botoes.append(resposta_errada)
			while off_set ==0:
				off_set = randi_range(-5,+5)
				aux = off_set+ resultado
				resposta_errada.text = str(aux)
				botoes.append(resposta_errada)
	return botoes
	
func exibir_botoes(botoes):
	for i in range( botoes.size()):
		add_child(botoes[i])
"

[sub_resource type="LabelSettings" id="LabelSettings_v851u"]
font_size = 58

[node name="MiniGames" type="Node2D"]
position = Vector2(79, 213)

[node name="SubViewportContainer" type="SubViewportContainer" parent="."]
offset_left = -79.0
offset_top = -213.0
offset_right = 1066.0
offset_bottom = 397.0

[node name="SubViewport" type="SubViewport" parent="SubViewportContainer"]
handle_input_locally = false
size = Vector2i(1100, 1000)
render_target_update_mode = 4

[node name="jogo_Aritimetica" type="Node2D" parent="SubViewportContainer/SubViewport"]
position = Vector2(79, 213)
script = SubResource("GDScript_rnpmt")

[node name="Label" type="Label" parent="SubViewportContainer/SubViewport/jogo_Aritimetica"]
offset_left = 30.0
offset_top = -183.0
offset_right = 973.0
offset_bottom = 16.0
text = "responda o maximo de perguntas
para aumentar seu dano"
label_settings = SubResource("LabelSettings_v851u")

[node name="start" type="Button" parent="SubViewportContainer/SubViewport/jogo_Aritimetica"]
offset_left = 279.0
offset_top = 156.0
offset_right = 418.0
offset_bottom = 239.0
text = "começar"

[connection signal="pressed" from="SubViewportContainer/SubViewport/jogo_Aritimetica/start" to="SubViewportContainer/SubViewport/jogo_Aritimetica" method="_on_button_pressed"]
