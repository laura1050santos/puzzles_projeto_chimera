[gd_scene load_steps=3 format=3 uid="uid://ts6vwlffw6uj"]

[sub_resource type="GDScript" id="GDScript_rnpmt"]
script/source = "extends Node2D

var b
var a 
var operacao = [\"+\",\"-\",\"x\", \"/\"]
var pergunta = Label.new()
var resultado 
var pontos : float
var botoes
#para as perguntas-> função que gera os numeros e coloca no label
#para as respostas -> 3 ou 4 botões com numeros aleatorios proximos ao da resposta
#se a resposta estiver certa-> add pontos ao multiplicador e passa pra proxima pergunta
#se estiver errada -> fecha a janela e encerra, retornando o valor do multiplicador 

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.



func _on_button_pressed() -> void:
	$Label.queue_free()
	$start.queue_free()
	comecar_jogo()
	
func comecar_jogo():
		print(\"pontuação atual: \", pontos)

		var op = operacao[randi_range(0,3)]
		#conta(faz a conta com a operacao e os numeros aleatorios)
		var c = conta(op)
		#cria a pergunta
		perguntar(op)
		#gerar_botoes_resposta_cria os botoes para responder
		botoes = gerar_botoes_resposta(c)
		exibir_botoes(botoes)
	
	 # Replace with function body.
func perguntar(op:String) -> void:
	pergunta.position= Vector2(150, -100)
	pergunta.text = \"quanto é: %d %s %d?\" % [a,op ,b]
	add_child(pergunta)
	
func conta(op_math):
	a = randi_range(30,50)
	b =randi_range(1,20)
	match op_math:
			\"+\":
				resultado = a+b
			\"-\":
				resultado = a-b
			\"x\":
				resultado = a*b
			\"/\":
				while a % b != 0:
					a = randi_range(30, 50)
					b = randi_range(1, 20)
				resultado = a / b
	return resultado
		 			
func gerar_botoes_resposta(result):
	var y = 100
	var posicao = randi_range(0,3)
	var btt = []
	var valores_usados =[result]

	for i in range(4):
		var botao = Button.new()
		botao.position =Vector2(150,y)
		y+=50
		var aux =0
		if posicao == i:
			botao.text =str(result)
			aux =  result
			
		else: 
			while true:
				var off_set = randi_range(-5,5)
				print(off_set)
				aux = result + off_set
				if( off_set == 0 and not aux in valores_usados):
					pass
				else: 
					break
				
			valores_usados.append(aux)
			botao.text = str(aux)
		btt.append(botao)
	return btt
	
func exibir_botoes(botoes):
	for i in range(0, botoes.size()):
		add_child(botoes[i])
		botoes[i].pressed.connect(func(): _on_botao_pressed(botoes[i]))
func limpar_botoes(botoes):
	for i in range(0, botoes.size()):
		botoes[i].text = \"\"
		
func _on_botao_pressed(compare_button):
	if compare_button.text == str(resultado):
		pontos+=0.5
		for i in range(botoes.size()):
			botoes[i].queue_free()
		comecar_jogo()
		print(\"pontuação atual: \", pontos)
		
	else:
		emit_signal(\"pontuacao\",self, pontos)
		print(\"mandando sinal para o jogo\")
		get_tree().quit()
		
"

[sub_resource type="LabelSettings" id="LabelSettings_v851u"]
font_size = 58

[node name="MiniGames" type="Node2D"]
position = Vector2(79, 213)

[node name="aritimetica" type="SubViewportContainer" parent="."]
offset_left = -79.0
offset_top = -213.0
offset_right = 1066.0
offset_bottom = 787.0

[node name="SubViewport" type="SubViewport" parent="aritimetica"]
handle_input_locally = false
size = Vector2i(1100, 1000)
render_target_update_mode = 4

[node name="ColorRect" type="ColorRect" parent="aritimetica/SubViewport"]
offset_left = -6.0
offset_right = 1101.0
offset_bottom = 601.0
color = Color(0.187618, 0.246422, 0.437281, 1)

[node name="jogo_Aritimetica" type="Node2D" parent="aritimetica/SubViewport"]
position = Vector2(79, 213)
script = SubResource("GDScript_rnpmt")

[node name="Label" type="Label" parent="aritimetica/SubViewport/jogo_Aritimetica"]
offset_left = 30.0
offset_top = -183.0
offset_right = 973.0
offset_bottom = 16.0
text = "responda o maximo de perguntas
para aumentar seu dano"
label_settings = SubResource("LabelSettings_v851u")

[node name="start" type="Button" parent="aritimetica/SubViewport/jogo_Aritimetica"]
offset_left = 279.0
offset_top = 156.0
offset_right = 418.0
offset_bottom = 239.0
text = "começar"

[connection signal="pressed" from="aritimetica/SubViewport/jogo_Aritimetica/start" to="aritimetica/SubViewport/jogo_Aritimetica" method="_on_button_pressed"]
